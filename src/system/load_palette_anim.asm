
LOAD_PALETTE_ANIM:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
	END_STACK_VARS
	STZ MAP_PALETTE_ANIMATION_LOADED
	LDX PALETTES + BPP4PALETTE_SIZE * 5
	BEQL @UNKNOWN6
	LOADPTR MAP_DATA_PALETTE_ANIM_POINTER_TABLE, @VIRTUAL06
	TXA
	DEC
	OPTIMIZED_MULT @VIRTUAL04, 4
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	DEREFERENCE_PTR_TO @VIRTUAL06, @VIRTUAL0A
	SEP #PROC_FLAGS::ACCUM8
	LDY #map_palette_animation_entry::count
	LDA [@VIRTUAL0A],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BEQL @UNKNOWN6
	MOVE_INT @VIRTUAL0A, @VIRTUAL06
	DEREFERENCE_PTR_TO @VIRTUAL06, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	LOADPTR ANIMATED_MAP_PALETTE_BUFFER, @LOCAL01
	JSL DECOMP
	LDA #0
	STA @LOCAL02
	BRA @UNKNOWN3
@UNKNOWN2:
	ASL
.IF .DEFINED(JPN)
	CLC
	ADC #.LOWORD(OVERWORLD_PALETTE_ANIM)
	TAX
	STZ a:overworld_palette_anim::delays,X
.ELSE
	TAX
	STZ OVERWORLD_PALETTE_ANIM + overworld_palette_anim::delays,X
.ENDIF
	LDA @LOCAL02
	INC
	STA @LOCAL02
@UNKNOWN3:
	CMP #9
	BCC @UNKNOWN2
	LDA #map_palette_animation_entry::entries
	MOVE_INTX @VIRTUAL0A, @VIRTUAL06
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	LDA #0
	STA @LOCAL02
	BRA @UNKNOWN5
@UNKNOWN4:
	ASL
.IF .DEFINED(JPN)
	CLC
	ADC #.LOWORD(OVERWORLD_PALETTE_ANIM)
	TAX
	LDA [@VIRTUAL06]
	AND #$00FF
	STA a:overworld_palette_anim::delays,X
.ELSE
	TAX
	LDA [@VIRTUAL06]
	AND #$00FF
	STA OVERWORLD_PALETTE_ANIM + overworld_palette_anim::delays,X
.ENDIF
	INC @VIRTUAL06
	LDA @LOCAL02
	INC
	STA @LOCAL02
@UNKNOWN5:
	SEP #PROC_FLAGS::ACCUM8
	LDY #map_palette_animation_entry::count
	LDA [@VIRTUAL0A],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	STA @VIRTUAL02
	LDA @LOCAL02
	CMP @VIRTUAL02
	BCC @UNKNOWN4
	LDA OVERWORLD_PALETTE_ANIM + overworld_palette_anim::delays
	STA OVERWORLD_PALETTE_ANIM + overworld_palette_anim::timer
	LDA #1
	STA MAP_PALETTE_ANIMATION_LOADED
	STA OVERWORLD_PALETTE_ANIM + overworld_palette_anim::index
@UNKNOWN6:
	END_C_FUNCTION
