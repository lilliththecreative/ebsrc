
SAVE_GAME_BLOCK:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
	STACK_RESERVE_PARAM_INT16 ;int slot
	STACK_RESERVE_RETURN_INT16 ;bool
	END_STACK_VARS
.IF .DEFINED(JPN)
	TAX
	STX @LOCAL05
.ELSE
	TAY
	STY @LOCAL05
.ENDIF
@UNKNOWN0:
	MOVE_INT TIMER, @VIRTUAL06
	MOVE_INT @VIRTUAL06, GAME_STATE+game_state::timer
.IF .DEFINED(JPN)
	LDY #.SIZEOF(save_block)
	LDX @LOCAL05
	TXA
.ELSE
	LDY @LOCAL05
	TYA
	LDY #.SIZEOF(save_block)
.ENDIF
	JSL MULT16
	STORE_INT1632 @VIRTUAL0A
	MOVE_INT @VIRTUAL0A, @VIRTUAL06
	CLC
	VAR_ADD_CONST_INT_ASSIGN SAVE_BASE + save_block::game_state, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL04
	PROMOTENEARPTR GAME_STATE, @VIRTUAL06
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT @VIRTUAL06, @LOCAL02
.IF .DEFINED(JPN)
	LDA #.HIWORD(__BSS_START__)
	STA @LOCAL02+2
.ELSE ; This is a stupid regression...
	TDC
	CLC
	ADC #@LOCAL02+2
	TAX
	STX @LOCAL03
	LDA #.HIWORD(__BSS_START__)
	STA __BSS_START__,X
.ENDIF
	MOVE_INT @LOCAL04, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	MOVE_INT @LOCAL02, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL01
	LDA #.SIZEOF(game_state)
	JSL MEMCPY24
	LDA #.SIZEOF(game_state)
	MOVE_INTX @LOCAL04, @VIRTUAL06
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL04
	LDA @VIRTUAL06+2
	STA @LOCAL04+2
	PROMOTENEARPTR PARTY_CHARACTERS, @VIRTUAL06
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT @VIRTUAL06, @LOCAL02
	LDA #.HIWORD(__BSS_START__)
.IF .DEFINED(JPN)
	STA @LOCAL02+2
.ELSE
	LDX @LOCAL03
	STA __BSS_START__,X
.ENDIF
	MOVE_INT @LOCAL04, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	MOVE_INT @LOCAL02, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL01
	LDA #.SIZEOF(char_struct) * 6
	JSL MEMCPY24
	LDA #.SIZEOF(char_struct) * 6
	MOVE_INTX @LOCAL04, @VIRTUAL06
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL04
	LDA @VIRTUAL06+2
	STA @LOCAL04+2
	PROMOTENEARPTR EVENT_FLAGS, @VIRTUAL06
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT @VIRTUAL06, @LOCAL02
	LDA #.HIWORD(__BSS_START__)
.IF .DEFINED(JPN)
	STA @LOCAL02+2
.ELSE
	LDX @LOCAL03
	STA __BSS_START__,X
.ENDIF
	MOVE_INT @LOCAL04, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	MOVE_INT @LOCAL02, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL01
	LDA #.SIZEOF(save_block::event_flags)
	JSL MEMCPY24
	MOVE_INT @VIRTUAL0A, @VIRTUAL06
	CLC
	VAR_ADD_CONST_INT_ASSIGN SAVE_BASE + save_header::checksum, @VIRTUAL06
.IF .DEFINED(JPN)
	LDX @LOCAL05
	TXA
.ELSE
	LDY @LOCAL05
	TYA
.ENDIF
	JSR CALC_SAVE_BLOCK_ADD_CHECKSUM
.IF .DEFINED(JPN)
	TAY
	STY @LOCAL03
	TYA
.ELSE
	TAX
	STX @LOCAL03
	TXA
.ENDIF
	STA [@VIRTUAL06]
.IF .DEFINED(JPN)
	LDX @LOCAL05
	TXA
.ELSE
	LDY @LOCAL05
	TYA
.ENDIF
	JSR CALC_SAVE_BLOCK_ADD_CHECKSUM
	STA @VIRTUAL02
.IF .DEFINED(JPN)
	LDY @LOCAL03
	TYA
.ELSE
	LDX @LOCAL03
	TXA
.ENDIF
	CMP @VIRTUAL02
	BNEL @UNKNOWN0
	MOVE_INT @VIRTUAL0A, @VIRTUAL06
	CLC
	VAR_ADD_CONST_INT_ASSIGN SAVE_BASE + save_header::checksum_complement, @VIRTUAL06
.IF .DEFINED(JPN)
	LDX @LOCAL05
	TXA
.ELSE
	LDY @LOCAL05
	TYA
.ENDIF
	JSR CALC_SAVE_BLOCK_XOR_CHECKSUM
.IF .DEFINED(JPN)
	TAY
	STY @LOCAL03
	TYA
.ELSE
	TAX
	STX @LOCAL03
	TXA
.ENDIF
	STA [@VIRTUAL06]
.IF .DEFINED(JPN)
	LDX @LOCAL05
	TXA
.ELSE
	LDY @LOCAL05
	TYA
.ENDIF
	JSR CALC_SAVE_BLOCK_XOR_CHECKSUM
	STA @VIRTUAL02
.IF .DEFINED(JPN)
	LDY @LOCAL03
	TYA
.ELSE
	LDX @LOCAL03
	TXA
.ENDIF
	CMP @VIRTUAL02
	BNEL @UNKNOWN0
	END_C_FUNCTION
