
DISPLAY_CHECK_POSITION_DEBUG_OVERLAY:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
	END_STACK_VARS
	LDA #.LOWORD(GAME_STATE)+game_state::leader_x_coord
	STA @VIRTUAL04
	LDX @VIRTUAL04
	LDA __BSS_START__,X
	XBA
	AND #$00FF
	JSR INTEGER_TO_HEX_DEBUG_TILES
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 4, 26
	STA @LOCAL01
	TXY
	LDX #8
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	.A16
	LDA #.LOWORD(GAME_STATE)+game_state::leader_y_coord
	STA @VIRTUAL02
	LDX @VIRTUAL02
	LDA __BSS_START__,X
	XBA
	AND #$00FF
	JSR INTEGER_TO_HEX_DEBUG_TILES
	.A16
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 10, 26
	STA @LOCAL01
	TXY
	LDX #8
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	LDX @VIRTUAL04
	LDA __BSS_START__,X
	LSR
	LSR
	LSR
	JSR INTEGER_TO_HEX_DEBUG_TILES
	.A16
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 4, 25
	STA @LOCAL01
	TXY
	LDX #8
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	LDX @VIRTUAL02
	LDA __BSS_START__,X
	LSR
	LSR
	LSR
	JSR INTEGER_TO_HEX_DEBUG_TILES
	.A16
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 10, 25
	STA @LOCAL01
	TXY
	LDX #8
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	LDX @VIRTUAL04
	LDA __BSS_START__,X
	JSR INTEGER_TO_HEX_DEBUG_TILES
	.A16
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 4, 24
	STA @LOCAL01
	TXY
	LDX #8
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	LDX @VIRTUAL02
	LDA __BSS_START__,X
	JSR INTEGER_TO_HEX_DEBUG_TILES
	.A16
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 10, 24
	STA @LOCAL01
	TXY
	LDX #8
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	.A16
	LDX @VIRTUAL04
	LDA __BSS_START__,X
	XBA
	AND #$00FF
	PHA
	LDY #MAP_WIDTH_TILES
	LDX @VIRTUAL02
	LDA __BSS_START__,X
	JSL DIVISION16S_DIVISOR_POSITIVE
	ASL
	ASL
	ASL
	ASL
	ASL
	PLY
	STY @VIRTUAL02
	CLC
	ADC @VIRTUAL02
	TAX
	LDA MAP_DATA_PER_SECTOR_MUSIC,X
	AND #$00FF
	TAX
	JSR INTEGER_TO_HEX_DEBUG_TILES
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 2, 2
	STA @LOCAL01
	TXY
	INY
	INY
	INY
	INY
	LDX #4
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	LDA CURRENT_SECTOR_ATTRIBUTES
	JSR INTEGER_TO_BINARY_DEBUG_TILES
	.A16
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 2, 3
	STA @LOCAL01
	TXY
	LDX #16
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	LDA GAME_STATE+game_state::trodden_tile_type
	JSR INTEGER_TO_BINARY_DEBUG_TILES
	.A16
	TAX
	LDA #^__BSS_START__
	STA @LOCAL00
	LDA #VRAM::TEXT_LAYER_TILEMAP + TILEMAP_COORDS 2, 4
	STA @LOCAL01
	TXY
	LDX #16
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL PREPARE_VRAM_COPY_ENTRY_B
	END_C_FUNCTION
