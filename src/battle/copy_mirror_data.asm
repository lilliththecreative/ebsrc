
COPY_MIRROR_DATA: ;$C2AF1F
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 82
	MOVE_INT $64, $06
	MOVE_INT $06, $4E
	MOVE_INT $60, $06
	MOVE_INT $06, $4A
	LDA #$0011
	CLC
	ADC $06
	STA $06
	STA $46
	LDA $08
	STA $48
	LDA [$46]
	STA $44
	LDA #$0017
	MOVE_INTX $4A, $06
	CLC
	ADC $06
	STA $06
	STA $40
	LDA $08
	STA $42
	LDA [$40]
	STA $3E
	LDA #$0013
	MOVE_INTX $4A, $06
	CLC
	ADC $06
	STA $06
	STA $3A
	LDA $08
	STA $3C
	LDA [$3A]
	STA $38
	LDA #$0019
	MOVE_INTX $4A, $06
	CLC
	ADC $06
	STA $06
	STA $34
	LDA $08
	STA $36
	LDA [$34]
	STA $32
	LDA #$0015
	MOVE_INTX $4A, $06
	CLC
	ADC $06
	STA $06
	STA $2E
	LDA $08
	STA $30
	LDA [$2E]
	STA $2C
	LDA #$001B
	MOVE_INTX $4A, $06
	CLC
	ADC $06
	STA $06
	STA $28
	LDA $08
	STA $2A
	LDA [$28]
	STA $26
	LDA #$000E
	MOVE_INTX $4A, $06
	CLC
	ADC $06
	STA $06
	STA $22
	LDA $08
	STA $24
	LDA [$22]
	AND #$00FF
	STA $04
	LDA #$0010
	MOVE_INTX $4A, $06
	CLC
	ADC $06
	STA $06
	STA $1E
	LDA $08
	STA $20
	LDA [$1E]
	AND #$00FF
	STA $02
	MOVE_INT $4A, $06
	MOVE_INT $06, $1A
	LDA [$1A]
	TAY
	STY $18
	LDA #$000D
	MOVE_INTX $4A, $06
	MOVE_INTX $06, $0A
	CLC
	ADC $0A
	STA $0A
	LDA [$0A]
	AND #$00FF
	TAX
	STX $16
	MOVE_INT $06, $0E
	MOVE_INT $4E, $06
	MOVE_INT $06, $12
	LDA #.SIZEOF(battler)
	JSL MEMCPY24
	LDA $44
	STA [$46]
	LDA $3E
	STA [$40]
	LDA $38
	STA [$3A]
	LDA $32
	STA [$34]
	LDA $2C
	STA [$2E]
	LDA $26
	STA [$28]
	LDA $04
	SEP #PROC_FLAGS::ACCUM8
	STA [$22]
	REP #PROC_FLAGS::ACCUM8
	LDA $02
	SEP #PROC_FLAGS::ACCUM8
	STA [$1E]
	LDY $18
	REP #PROC_FLAGS::ACCUM8
	TYA
	STA [$1A]
	LDX $16
	TXA
	SEP #PROC_FLAGS::ACCUM8
	STA [$0A]
	REP #PROC_FLAGS::ACCUM8
	PLD
	RTL
