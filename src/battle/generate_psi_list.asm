
GENERATE_PSI_LIST:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
	STACK_RESERVE_INT8
	STACK_RESERVE_INT16
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
	STACK_RESERVE_INT8
	STACK_RESERVE_PARAM_INT16 ;int character
	STACK_RESERVE_PARAM_INT8 ;char usability
	STACK_RESERVE_PARAM_INT8 ;char categories
	END_STACK_VARS
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA @PARAM02
	STA @LOCAL08
	LDA @PARAM01
	STA @VIRTUAL01
	REP #PROC_FLAGS::ACCUM8
	TXA
	DEC
	STA @VIRTUAL04
	STA @LOCAL07
	JSR SET_INSTANT_PRINTING
	JSR UNKNOWN_C11383
	STZ @LOCAL06
	LDA @VIRTUAL04
	CMP #PARTY_MEMBER::POO - 1
	BNEL @UNKNOWN5
	LDA @VIRTUAL01
	AND #$00FF
	AND #PSI_USABILITY::BATTLE
	BEQL @UNKNOWN5
	LDA @LOCAL08
	AND #$00FF
	AND #PSI_CATEGORY::OFFENSE
	BEQL @UNKNOWN5
	LDA GAME_STATE+game_state::party_psi
	AND #$00FF
	AND #PARTY_PSI_FLAGS::STARSTORM_ALPHA
	BEQL @UNKNOWN4
	LOADPTR PSI_ABILITY_TABLE + PSI::STARSTORM_ALPHA * .SIZEOF(psi_ability), @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL05
	LDA #psi_ability::menu_y
	MOVE_INTX @VIRTUAL06, @VIRTUAL0A
	CLC
	ADC @VIRTUAL0A
	STA @VIRTUAL0A
	LDA [@VIRTUAL0A]
	AND #$00FF
	TAX
	LDA #0
	JSR UNKNOWN_C438A5
	LDA [@VIRTUAL06]
	AND #$00FF
	JSR GET_PSI_NAME
	MOVE_INT @LOCAL05, @VIRTUAL06
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::level
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	ASL
	PHA
	LOADPTR PSI_SUFFIXES, @VIRTUAL06
	PLA
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL00
	LDA @VIRTUAL06+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
	LDA [@VIRTUAL0A]
	AND #$00FF
	TAY
	STY @LOCAL04
	MOVE_INT @LOCAL05, @VIRTUAL06
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_x
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAX
	LDA #PSI::STARSTORM_ALPHA
	LDY @LOCAL04
	JSR UNKNOWN_C1153B
@UNKNOWN4:
	LDA GAME_STATE+game_state::party_psi
	AND #$00FF
	AND #PARTY_PSI_FLAGS::STARSTORM_OMEGA
	BEQ @UNKNOWN5
	LOADPTR PSI_ABILITY_TABLE + PSI::STARSTORM_OMEGA * .SIZEOF(psi_ability), @VIRTUAL06
.IF .DEFINED(JPN)
	LOADPTR PSI_SUFFIXES, @VIRTUAL0A
.ELSE
	MOVE_INT @VIRTUAL06, @LOCAL05
.ENDIF
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::level
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	ASL
.IF .DEFINED(JPN)
	CLC
	ADC @VIRTUAL0A
	STA @VIRTUAL0A
	STA @LOCAL00
	LDA @VIRTUAL0A+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
.ELSE
	PHA
	LOADPTR PSI_SUFFIXES, @VIRTUAL06
	PLA
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL00
	LDA @VIRTUAL06+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
	MOVE_INT @LOCAL05, @VIRTUAL06
.ENDIF
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_y
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAY
	STY @LOCAL04
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_x
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAX
	LDA #PSI::STARSTORM_OMEGA
	LDY @LOCAL04
	JSR UNKNOWN_C1153B
@UNKNOWN5:
	LDA #1
	STA @VIRTUAL02
	JMP @UNKNOWN17
@UNKNOWN6:
	MOVE_INT @VIRTUAL0A, @VIRTUAL06
.IF .DEFINED(USA)
	MOVE_INT @VIRTUAL06, @LOCAL05
.ENDIF
	LDA @LOCAL07
	STA @VIRTUAL04
	BEQ @UNKNOWN7
	CMP #PARTY_MEMBER::PAULA - 1
	BEQ @UNKNOWN8
	CMP #PARTY_MEMBER::POO - 1
	BEQ @UNKNOWN9
	BRA @UNKNOWN10
@UNKNOWN7:
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::ness_level
	LDA [@VIRTUAL0A],Y
	STA @VIRTUAL00
	STA @LOCAL03
	BRA @UNKNOWN10
@UNKNOWN8:
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::paula_level
	LDA [@VIRTUAL0A],Y
	STA @VIRTUAL00
	STA @LOCAL03
	BRA @UNKNOWN10
@UNKNOWN9:
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::poo_level
	LDA [@VIRTUAL0A],Y
	STA @VIRTUAL00
	STA @LOCAL03
@UNKNOWN10:
	SEP #PROC_FLAGS::ACCUM8
	LDA @LOCAL03
	STA @VIRTUAL00
	REP #PROC_FLAGS::ACCUM8
	LDA @VIRTUAL00
	AND #$00FF
	BEQL @UNKNOWN16
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::usability
	LDA [@VIRTUAL06],Y
	AND @VIRTUAL01
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BEQL @UNKNOWN16
	LDA @VIRTUAL04
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA @VIRTUAL00
	CMP PARTY_CHARACTERS+char_struct::level,X
	BGTL @UNKNOWN16
	LDY #psi_ability::category
	LDA [@VIRTUAL06],Y
	AND @LOCAL08
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	BEQL @UNKNOWN16
	MOVE_INT @VIRTUAL06, @VIRTUAL0A
	LDA [@VIRTUAL0A]
	AND #$00FF
	CMP @LOCAL06
	BEQ @UNKNOWN15
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_y
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAX
	LDA #0
	JSR UNKNOWN_C438A5
	LDA [@VIRTUAL0A]
	AND #$00FF
	JSR GET_PSI_NAME
	LDA [@VIRTUAL0A]
	AND #$00FF
	STA @LOCAL06
@UNKNOWN15:
.IF .DEFINED(JPN)
	LOADPTR PSI_SUFFIXES, @VIRTUAL0A
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::level
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	ASL
	CLC
	ADC @VIRTUAL0A
	STA @VIRTUAL0A
	STA @LOCAL00
	LDA @VIRTUAL0A+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
.ELSE
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::level
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	ASL
	PHA
	LOADPTR PSI_SUFFIXES, @VIRTUAL06
	PLA
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL00
	LDA @VIRTUAL06+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
	MOVE_INT @LOCAL05, @VIRTUAL06
.ENDIF
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_y
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAY
	STY @LOCAL04
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_x
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAX
	LDA @VIRTUAL02
	LDY @LOCAL04
	JSR UNKNOWN_C1153B
@UNKNOWN16:
	REP #PROC_FLAGS::ACCUM8
	INC @VIRTUAL02
@UNKNOWN17:
	LOADPTR PSI_ABILITY_TABLE, @VIRTUAL06
	LDA @VIRTUAL02
	OPTIMIZED_MULT @VIRTUAL04, .SIZEOF(psi_ability)
	MOVE_INTX @VIRTUAL06, @VIRTUAL0A
	CLC
	ADC @VIRTUAL0A
	STA @VIRTUAL0A
	LDA [@VIRTUAL0A]
	AND #$00FF
	BNEL @UNKNOWN6
	LDA @LOCAL07
	STA @VIRTUAL04
	BNEL @UNKNOWN24
	LDA @VIRTUAL01
	AND #$00FF
	AND #PSI_USABILITY::OVERWORLD
	BEQL @UNKNOWN24
	LDA @LOCAL08
	AND #$00FF
	AND #PSI_CATEGORY::OTHER
	BEQL @UNKNOWN24
	LDA GAME_STATE+game_state::party_psi
	AND #$00FF
	AND #PARTY_PSI_FLAGS::TELEPORT_ALPHA
	BEQL @UNKNOWN23
	LDA #PSI::TELEPORT_ALPHA * .SIZEOF(psi_ability)
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL05
	LDA @VIRTUAL06+2
	STA @LOCAL05+2
	LDA #psi_ability::menu_y
	MOVE_INTX @VIRTUAL06, @VIRTUAL0A
	CLC
	ADC @VIRTUAL0A
	STA @VIRTUAL0A
	LDA [@VIRTUAL0A]
	AND #$00FF
	TAX
	LDA #0
	JSR UNKNOWN_C438A5
	LDA [@VIRTUAL06]
	AND #$00FF
	JSR GET_PSI_NAME
	MOVE_INT @LOCAL05, @VIRTUAL06
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::level
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	ASL
	PHA
	LOADPTR PSI_SUFFIXES, @VIRTUAL06
	PLA
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL00
	LDA @VIRTUAL06+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
	LDA [@VIRTUAL0A]
	AND #$00FF
	TAY
	STY @LOCAL02
	MOVE_INT @LOCAL05, @VIRTUAL06
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_x
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAX
	LDA #PSI::TELEPORT_ALPHA
	LDY @LOCAL02
	JSR UNKNOWN_C1153B
@UNKNOWN23:
	LDA GAME_STATE+game_state::party_psi
	AND #$00FF
	AND #PARTY_PSI_FLAGS::TELEPORT_BETA
	BEQ @UNKNOWN24
	LOADPTR PSI_ABILITY_TABLE + PSI::TELEPORT_BETA * .SIZEOF(psi_ability), @VIRTUAL06
.IF .DEFINED(JPN)
	LOADPTR PSI_SUFFIXES, @VIRTUAL0A
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::level
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	ASL
	CLC
	ADC @VIRTUAL0A
	STA @VIRTUAL0A
	STA @LOCAL00
	LDA @VIRTUAL0A+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
.ELSE
	MOVE_INT @VIRTUAL06, @LOCAL05
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::level
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	DEC
	ASL
	PHA
	LOADPTR PSI_SUFFIXES, @VIRTUAL06
	PLA
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL00
	LDA @VIRTUAL06+2
	STA @LOCAL00+2
	MOVE_INT_CONSTANT NULL, @LOCAL01
	MOVE_INT @LOCAL05, @VIRTUAL06
.ENDIF
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_y
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAY
	STY @LOCAL04
	SEP #PROC_FLAGS::ACCUM8
	LDY #psi_ability::menu_x
	LDA [@VIRTUAL06],Y
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAX
	LDA #PSI::TELEPORT_BETA
	LDY @LOCAL04
	JSR UNKNOWN_C1153B
@UNKNOWN24:
	JSR PRINT_MENU_ITEMS
	JSR CLEAR_INSTANT_PRINTING
	END_C_FUNCTION
