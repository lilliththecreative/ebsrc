
REVIVE_TARGET:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
	STACK_RESERVE_PARAM_INT16 ;NEAR battler* target
	STACK_RESERVE_PARAM_INT16 ;int hp
	END_STACK_VARS
.IF .DEFINED(JPN)
	@LOCAL02ALT := @LOCAL02
	@LOCAL03ALT := @LOCAL03
.ELSE
	@LOCAL02ALT := @LOCAL03
	@LOCAL03ALT := @LOCAL02
.ENDIF
	TXY
	STY @LOCAL05
	STA @VIRTUAL04
	DISPLAY_BATTLE_TEXT_PTR MSG_BTL_IKIKAERI
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	LDX @VIRTUAL04
	STA a:battler::afflictions + STATUS_GROUP::SHIELD,X
	LDX @VIRTUAL04
	STA a:battler::afflictions + STATUS_GROUP::HOMESICKNESS,X
	LDX @VIRTUAL04
	STA a:battler::afflictions + STATUS_GROUP::CONCENTRATION,X
	LDX @VIRTUAL04
	STA a:battler::afflictions + STATUS_GROUP::STRANGENESS,X
	LDX @VIRTUAL04
	STA a:battler::afflictions + STATUS_GROUP::TEMPORARY,X
	LDX @VIRTUAL04
	STA a:battler::afflictions + STATUS_GROUP::PERSISTENT_HARDHEAL,X
	LDX @VIRTUAL04
	STA a:battler::afflictions + STATUS_GROUP::PERSISTENT_EASYHEAL,X
	LDX @VIRTUAL04
	REP #PROC_FLAGS::ACCUM8
	STZ a:battler::current_action,X
	SEP #PROC_FLAGS::ACCUM8
	LDA #1
	LDX @VIRTUAL04
	STA __BSS_START__+13,X
	LDY @LOCAL05
	TYX
	REP #PROC_FLAGS::ACCUM8
	LDA @VIRTUAL04
	JSR SET_HP
	LDX @VIRTUAL04
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	BNE @UNKNOWN0
	LDX @VIRTUAL04
	LDA a:battler::npc_id,X
	AND #$00FF
	BNE @UNKNOWN0
	LDA @VIRTUAL04
	CLC
	ADC #16
	TAX
	STX @LOCAL04
	LDA __BSS_START__,X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDY @LOCAL05
	TYA
	STA PARTY_CHARACTERS+char_struct::current_hp_target,X
	LDX @LOCAL04
	LDA __BSS_START__,X
	AND #$00FF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDA #1
	STA PARTY_CHARACTERS+char_struct::current_hp,X
@UNKNOWN0:
	LDX @VIRTUAL04
	LDA a:battler::ally_or_enemy,X
	AND #$00FF
	CMP #1
	BNEL @UNKNOWN11
	LDX @VIRTUAL04
	LDA a:battler::npc_id,X
	AND #$00FF
	BNEL @UNKNOWN11
	LDA #.LOWORD(BATTLERS_TABLE)
	LDX #0
	STX @LOCAL05
	BRA @UNKNOWN4
@UNKNOWN3:
	TAX
	SEP #PROC_FLAGS::ACCUM8
	STZ a:battler::use_alt_spritemap,X
	CLC
	REP #PROC_FLAGS::ACCUM8
	ADC #.SIZEOF(battler)
	LDX @LOCAL05
	INX
	STX @LOCAL05
@UNKNOWN4:
	CPX #BATTLER_COUNT
	BCC @UNKNOWN3
	SEP #PROC_FLAGS::ACCUM8
	LDA #1
	LDX @VIRTUAL04
	STA a:battler::use_alt_spritemap,X
.IF .DEFINED(JPN)
	TAX
.ELSE
	LDX #1
.ENDIF
	STX @LOCAL05
	BRA @UNKNOWN6
@UNKNOWN5:
	STX @VIRTUAL02
	LDX @VIRTUAL04
	REP #PROC_FLAGS::ACCUM8
	LDA a:battler::vram_sprite_index,X
	AND #$00FF
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC @VIRTUAL02
	ASL
	TAX
	STZ PALETTES + BPP4PALETTE_SIZE * 12,X
	LDX @LOCAL05
	INX
	STX @LOCAL05
@UNKNOWN6:
	CPX #16
	BCC @UNKNOWN5
	REP #PROC_FLAGS::ACCUM8
	LDA #10
	JSL UNKNOWN_C2FAD8
	LDA #1
	STA @VIRTUAL02
	BRA @UNKNOWN8
@UNKNOWN7:
	LDA #31
	STA @LOCAL00
	TAY
	TAX
	STX @LOCAL03
	LDX @VIRTUAL04
	LDA a:battler::vram_sprite_index,X
	AND #$00FF
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC @VIRTUAL02
	LDX @LOCAL03
	JSL UNKNOWN_C2FB35
	INC @VIRTUAL02
@UNKNOWN8:
	LDA @VIRTUAL02
	CMP #16
	BCC @UNKNOWN7
	LDA #1*SIXTH_OF_A_SECOND
	JSR WAIT
	LDA #20
	JSL UNKNOWN_C2FAD8
	LDA #1
	STA @VIRTUAL02
	BRA @UNKNOWN10
@UNKNOWN9:
	LDX @VIRTUAL04
	LDA a:battler::vram_sprite_index,X
	AND #$00FF
	ASL
	ASL
	ASL
	ASL
	CLC
	ADC @VIRTUAL02
	STA @LOCAL02ALT
	ASL
	TAX
	LDA PALETTES + BPP4PALETTE_SIZE * 8,X
	TAX
	STX @LOCAL03ALT
	SEP #PROC_FLAGS::ACCUM8
	LDA #10
	PHA
	REP #PROC_FLAGS::ACCUM8
	TXA
	SEP #PROC_FLAGS::INDEX8
	PLY
	JSL ASR8_UNKNOWN1
	AND #$001F
	STA @LOCAL00
	REP #PROC_FLAGS::INDEX8
	LDX @LOCAL03ALT
	TXA
	LSR
	LSR
	LSR
	LSR
	LSR
	AND #$001F
	TAY
	TXA
	AND #$001F
	TAX
	LDA @LOCAL02ALT
	JSL UNKNOWN_C2FB35
	INC @VIRTUAL02
@UNKNOWN10:
	LDA @VIRTUAL02
	CMP #16
	BCC @UNKNOWN9
	LDA #2*SIXTHS_OF_A_SECOND
	JSR WAIT
@UNKNOWN11:
	LDA #1
	END_C_FUNCTION
