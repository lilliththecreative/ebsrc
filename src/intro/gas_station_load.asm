
GAS_STATION_LOAD:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	END_STACK_VARS
	STZ BG2_Y_POS
	STZ BG2_X_POS
	STZ BG1_Y_POS
	STZ BG1_X_POS
	LOADPTR BUFFER, @VIRTUAL06
	LOADPTR GAS_STATION_GRAPHICS, @LOCAL00
	MOVE_INT @VIRTUAL06, @LOCAL01
	JSL DECOMP
	COPY_TO_VRAM1P @VIRTUAL06, $0000, $C000, 0
	.A16
	LOADPTR GAS_STATION_ARRANGEMENT, @LOCAL00
	MOVE_INT @VIRTUAL06, @LOCAL01
	JSL DECOMP
	COPY_TO_VRAM1P @VIRTUAL06, $7800, $800, 0
	.A16
	LOADPTR GAS_STATION_PALETTE, @LOCAL00
	PROMOTENEARPTR .LOWORD(PALETTES), @VIRTUAL06
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT @VIRTUAL06, @LOCAL01
	JSL DECOMP
	JSL UNKNOWN_C4A377
	JSL UNKNOWN_C496F9
	LOADPTR BUFFER + BPP4PALETTE_SIZE * 2, @LOCAL00
	LDX #BPP4PALETTE_SIZE
	SEP #PROC_FLAGS::ACCUM8
	LDA #0
	JSL MEMSET24
	SEP #PROC_FLAGS::ACCUM8
	STZ_BADOPT @LOCAL00
	LDX #BPP4PALETTE_SIZE * 2
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(PALETTES)
	JSL MEMSET16
	SEP #PROC_FLAGS::ACCUM8
	STZ_BADOPT @LOCAL00
	LDX #13 * BPP4PALETTE_SIZE
	REP #PROC_FLAGS::ACCUM8
	LDA #.LOWORD(PALETTES) + 3 * BPP4PALETTE_SIZE
	JSL MEMSET16
	LDX #$FFFF
	LDA #RGBVAL 0,15,0
	JSL UNKNOWN_C496E7
	SEP #PROC_FLAGS::ACCUM8
	LDA #$01
	STA TM_MIRROR
	LDA #$02
	STA TD_MIRROR
	STA f:CGWSEL
	LDA #$03
	STA f:CGADSUB
	LDA #PALETTE_UPLOAD::FULL
	STA PALETTE_UPLOAD_MODE
	REP #PROC_FLAGS::ACCUM8
	END_C_FUNCTION
