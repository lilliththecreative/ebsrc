
RECALC_CHARACTER_POSTMATH_SPEED:
	BEGIN_C_FUNCTION_FAR
	STACK_RESERVE_VARS
	STACK_RESERVE_INT8
	STACK_RESERVE_INT16
	STACK_RESERVE_INT16
.IF .DEFINED(USA)
	STACK_RESERVE_INT16 "LOCALEB"
.ENDIF
	STACK_RESERVE_PARAM_INT16 ;NEAR int character
	END_STACK_VARS
.IF .DEFINED(JPN)
	@TMP := @VIRTUAL04
.ELSE
	@TMP := @VIRTUAL02
.ENDIF
	TAX
	DEC
	STA @VIRTUAL02
.IF .DEFINED(USA)
	STA @LOCALEB
	LDA @VIRTUAL02
.ENDIF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDA PARTY_CHARACTERS+char_struct::base_speed,X
	AND #$00FF
	TAY
	STY @LOCAL02
	LDA PARTY_CHARACTERS+char_struct::equipment+EQUIPMENT_SLOT::BODY,X
	AND #$00FF
	BEQ @UNKNOWN0
	DEC
	STA @TMP
	TXA
	CLC
	ADC #.LOWORD(PARTY_CHARACTERS) + char_struct::items
	CLC
	ADC @TMP
	TAX
	LDA __BSS_START__,X
	AND #$00FF
	OPTIMIZED_MULT @VIRTUAL04, .SIZEOF(item)
	CLC
	ADC #item::params + item_parameters::ep
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA f:ITEM_CONFIGURATION_TABLE,X
	REP #PROC_FLAGS::ACCUM8
	SEC
	AND #$00FF
	SBC #$0080
	EOR #$FF80
	STA @VIRTUAL04
.IF .DEFINED(USA)
	LDY @LOCAL02
.ENDIF
	TYA
	CLC
	ADC @VIRTUAL04
	TAY
	STY @LOCAL02
@UNKNOWN0:
.IF .DEFINED(JPN)
	LDA @VIRTUAL02
.ELSE
	LDA @LOCALEB
	STA @VIRTUAL02
.ENDIF
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	LDA PARTY_CHARACTERS+char_struct::boosted_speed,X
	AND #$00FF
	STA @VIRTUAL04
	LDY @LOCAL02
	TYA
	CLC
	ADC @VIRTUAL04
	STA @LOCAL01
	STA @VIRTUAL04
	LDA #0
	CLC
	SBC @VIRTUAL04
	BRANCHLTEQS @UNKNOWN3
	LDX #0
	BRA @UNKNOWN4
@UNKNOWN3:
	LDA @LOCAL01
	REP #PROC_FLAGS::ACCUM8
	AND #$00FF
	TAX
@UNKNOWN4:
	TXA
	SEP #PROC_FLAGS::ACCUM8
	STA @LOCAL00
	REP #PROC_FLAGS::ACCUM8
	LDA @VIRTUAL02
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	TAX
	SEP #PROC_FLAGS::ACCUM8
	LDA @LOCAL00
	STA PARTY_CHARACTERS+char_struct::speed,X
	END_C_FUNCTION
