
<<<<<<< HEAD
UNKNOWN_C0EBE0:
	BEGIN_C_FUNCTION_FAR
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	END_STACK_VARS
	LOADPTR BUFFER, @VIRTUAL06
	LOADPTR TITLE_SCREEN_GRAPHICS, @LOCAL00
	MOVE_INT @VIRTUAL06, @LOCAL01
=======
UNKNOWN_C0EBE0: ;$C0EBE0
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 22
	LOADPTR UNKNOWN_7F0000, $06
	LOADPTR TITLE_SCREEN_GRAPHICS, $0E
	MOVE_INT $06, $12
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	JSL DECOMP
	COPY_TO_VRAM1P $06, $1000, $2000, $00
	.A16
	LOADPTR TITLE_SCREEN_ARRANGEMENT, $0E
	MOVE_INT $06, $12
	JSL DECOMP
	COPY_TO_VRAM1P $06, $0000, $2000, $00
	.A16
	LOADPTR UNKNOWN_E1C6E5, $0E
	MOVE_INT $06, $12
	JSL DECOMP
	COPY_TO_VRAM1P $06, $2000, $2000, $00
	.A16
	LOADPTR UNKNOWN_ARRANGEMENT_9DE1, $0E
	MOVE_INT $06, $12
	JSL DECOMP
	COPY_TO_VRAM1P $06, $3C00, $0800, $00
	.A16
	LOADPTR $E1B18C, $0E
	MOVE_INT $06, $12
	JSL DECOMP
	COPY_TO_VRAM1P $06, $3800, $0800, $00
	.A16
	LOADPTR UNKNOWN_E1C291, $0E
	MOVE_INT $06, $12
	JSL DECOMP
<<<<<<< HEAD
	MOVE_INT @VIRTUAL06, @LOCAL00
	LDX #BPP4PALETTE_SIZE * 16
	LDA #.LOWORD(PALETTES)
	JSL MEMCPY16
	STZ PALETTES
	SEP #PROC_FLAGS::ACCUM8
	LDA #PALETTE_UPLOAD::FULL
	STA PALETTE_UPLOAD_MODE
=======
	MOVE_INT $06, $0E
	LDX #$0200
	LDA #$0200
	JSL MEMCPY16
	STZ $0200
	SEP #PROC_FLAGS::ACCUM8
	LDA #$18
	STA a:$0030
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	REP #PROC_FLAGS::ACCUM8
	PLD
	RTL
