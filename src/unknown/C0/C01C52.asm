
UNKNOWN_C01C52:
	BEGIN_C_FUNCTION_FAR
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
.IF .DEFINED(JPN)
	STACK_RESERVE_INT16 "LOCALM2"
.ENDIF
	STACK_RESERVE_INT16 "LOCAL03"
	STACK_RESERVE_INT16 "LOCAL04"
	STACK_RESERVE_INT16 "LOCAL05"
	STACK_RESERVE_INT16 "LOCAL06"
	STACK_RESERVE_INT16 "LOCAL07"
	STACK_RESERVE_PARAM_INT16
	STACK_RESERVE_PARAM_INT16
	STACK_RESERVE_PARAM_INT16
	END_STACK_VARS
.IF .DEFINED(JPN)
	@TMP0 = @VIRTUAL04
	@TMP1 = @LOCALM2
	@TMP2 = @LOCAL05
.ELSE
	@TMP0 = @LOCAL05
	@TMP1 = @LOCAL05
	@TMP2 = @VIRTUAL04
.ENDIF
	STY @LOCAL07
	STX @LOCAL06
	STA @TMP2
	INC
	AND #$FFFE
	STA @VIRTUAL02
	LDA @LOCAL06
	INC
	AND #$FFFE
	STA @TMP0
	LDY @TMP0
	LDA @VIRTUAL02
	JSL MULT16
	LSR
	LSR
	STA @LOCAL04
	LDY @LOCAL07
	TYX
	LDA @LOCAL04
	JSL UNKNOWN_C01B96
	STA @LOCAL03
	CMP #$7FFF
	BLTEQ @UNKNOWN0
	LDA @LOCAL03
	JMP @UNKNOWN6
@UNKNOWN0:
	LDA @VIRTUAL02
	CMP @TMP2
	BNE @UNKNOWN1
	LDA @TMP0
	CMP @LOCAL06
	BEQL @UNKNOWN5
@UNKNOWN1:
	LDA @LOCAL03
	STA @VIRTUAL04
	BRA @UNKNOWN4
@UNKNOWN2:
	LDA @VIRTUAL04
	CLC
	ADC #8
	AND #$00F8
	SEC
	SBC @VIRTUAL04
	STA @TMP1
	LDA @LOCAL01
	SEC
	SBC @VIRTUAL04
	CMP @TMP1
	BCS @UNKNOWN3
	STA @TMP1
@UNKNOWN3:
	LDA @TMP1
	OPTIMIZED_MULT @VIRTUAL04, 64
	STA @VIRTUAL02
	LOADPTR UNKNOWN_C40BE8, @VIRTUAL06
	LOADPTR UNKNOWN_C42F8C, @VIRTUAL0A
	LDA @VIRTUAL04
	ASL
	CLC
	ADC @VIRTUAL0A
	STA @VIRTUAL0A
	MOVE_INT @VIRTUAL06, @LOCAL00
	LDA [@VIRTUAL0A]
	CLC
	ADC #VRAM::OBJ
	TAY
	LDX @VIRTUAL02
	SEP #PROC_FLAGS::ACCUM8
	LDA #3
	JSL PREPARE_VRAM_COPY
	.A16
	MOVE_INT @VIRTUAL06, @LOCAL00
	LDA [@VIRTUAL0A]
	CLC
	ADC #VRAM::OBJ + 64 * 4
	TAY
	LDX @VIRTUAL02
	SEP #PROC_FLAGS::ACCUM8
	LDA #3
	JSL PREPARE_VRAM_COPY
	.A16
	LDA @VIRTUAL04
	CLC
	ADC @TMP1
	STA @VIRTUAL04
@UNKNOWN4:
	LDA @LOCAL03
	CLC
	ADC @LOCAL04
	STA @LOCAL01
	STA @VIRTUAL02
	LDA @VIRTUAL04
	CMP @VIRTUAL02
	BCCL @UNKNOWN2
@UNKNOWN5:
	LDA @LOCAL03
@UNKNOWN6:
	END_C_FUNCTION
