
UNKNOWN_C0449B: ;$C0449B
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 38
	STZ GAME_STATE + game_state::unknown90
	LDA MUSHROOMIZED_WALKING_FLAG
	BEQ @NOT_MUSHROOMIZED
	JSR MUSHROOMIZATION_MOVEMENT_SWAP
@NOT_MUSHROOMIZED:
	LDX #.LOWORD(GAME_STATE) + game_state::walking_style
	STX $24
	LDA __BSS_START__,X
	JSL MAP_INPUT_TO_DIRECTION
	STA $02
	LDA BATTLE_SWIRL_COUNTDOWN
	BEQ @UNKNOWN2
	LDX BATTLE_SWIRL_COUNTDOWN
	DEX
	STX BATTLE_SWIRL_COUNTDOWN
	BEQ @UNKNOWN1
	LDY GAME_STATE+game_state::current_party_members
	LDX GAME_STATE+game_state::leader_y_coord
	LDA GAME_STATE+game_state::leader_x_coord
	JSL NPC_COLLISION_CHECK
	JMP @RETURN
@UNKNOWN1:
<<<<<<< HEAD
	LDA #.LOWORD(-1)
	STA BATTLE_MODE
=======
	LDA #$FFFF
	STA BATTLE_DEBUG
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	JMP @RETURN
@UNKNOWN2:
	LDA $02
	CMP #$FFFF
	BNE @UNKNOWN3
	LDY GAME_STATE+game_state::current_party_members
	LDX GAME_STATE+game_state::leader_y_coord
	LDA GAME_STATE+game_state::leader_x_coord
	JSL NPC_COLLISION_CHECK
	JMP @RETURN
@UNKNOWN3:
	LDX $24
	LDA __BSS_START__,X
	CMP #$000D
	BNE @UNKNOWN12
	LDA STAIRS_DIRECTION
	CMP #$0100
	BEQ @UNKNOWN4
	LDA STAIRS_DIRECTION
	CMP #$0200
	BNE @UNKNOWN7
@UNKNOWN4:
	LDA $02
	CMP #$0003
	BGT @UNKNOWN6
	LDA #$0001
	STA $02
	BRA @UNKNOWN10
@UNKNOWN6:
	LDA #$0005
	STA $02
	BRA @UNKNOWN10
@UNKNOWN7:
	LDA $02
	DEC
	AND #$0007
	CMP #$0003
	BGT @UNKNOWN9
	LDA #$0003
	STA $02
	BRA @UNKNOWN10
@UNKNOWN9:
	LDA #$0007
	STA $02
@UNKNOWN10:
	LDA $02
	CMP #$0004
	BCS @UNKNOWN11
	LDA #$0002
	STA GAME_STATE+game_state::leader_direction
	BRA @UNKNOWN13
@UNKNOWN11:
	LDA #$0006
	STA GAME_STATE+game_state::leader_direction
	BRA @UNKNOWN13
@UNKNOWN12:
	LDA PLAYER_MOVEMENT_FLAGS
	AND #$0001
	BNE @UNKNOWN13
	LDA $02
	STA GAME_STATE+game_state::leader_direction
@UNKNOWN13:
	INC PLAYER_HAS_MOVED_SINCE_MAP_LOAD
	LDX #.LOWORD(GAME_STATE) + game_state::unknown90
	LDA __BSS_START__,X
	INC
	STA __BSS_START__,X
	LDA GAME_STATE+game_state::trodden_tile_type
	STA $22
	LDA #.LOWORD(GAME_STATE) + game_state::unknown80
	STA $20
	LDY $20
	MOVE_INT_YPTRSRC __BSS_START__, $06
	MOVE_INT $06, $1C
	MOVE_INT $06, $12
	LDA #.LOWORD(GAME_STATE) + game_state::unknown84
	STA $1A
	LDY $1A
	MOVE_INT_YPTRSRC __BSS_START__, $06
	MOVE_INT $06, $16
	MOVE_INT $1C, $06
	MOVE_INT $06, $0E
	LDX $22
	LDA $02
	JSR ADJUST_POSITION_HORIZONTAL
	MOVE_INT $06, $12
	MOVE_INT $16, $06
	MOVE_INT $06, $0E
	LDX $22
	LDA $02
	JSR ADJUST_POSITION_VERTICAL
<<<<<<< HEAD
	MOVE_INT @VIRTUAL06, @LOCAL02
	LDA #.LOWORD(-1)
	STA LADDER_STAIRS_TILE_X
	LDA PLAYER_MOVEMENT_FLAGS
=======
	MOVE_INT $06, $16
	LDA #$FFFF
	STA UNKNOWN_7E5DA8
	LDA MISC_DEBUG_FLAGS
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	AND #$0002
	BNE @UNKNOWN14
	LDA $02
	STA $0E
	LDY GAME_STATE+game_state::current_party_members
	LDX $18
	LDA $14
	JSL UNKNOWN_C05B7B
<<<<<<< HEAD
	STA @VIRTUAL04
	LDA @VIRTUAL02
	CMP FINAL_MOVEMENT_DIRECTION
	BEQ @UNKNOWN16
	LDY @LOCAL05
	MOVE_INT_YPTRSRC __BSS_START__, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	LDX @LOCAL06
	LDA FINAL_MOVEMENT_DIRECTION
	JSR ADJUST_POSITION_HORIZONTAL
	MOVE_INT @VIRTUAL06, @LOCAL01
	LDY @LOCAL03
	MOVE_INT_YPTRSRC __BSS_START__, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	LDX @LOCAL06
	LDA FINAL_MOVEMENT_DIRECTION
=======
	STA $04
	LDA $02
	CMP UNKNOWN_7E5DA6
	BEQ @UNKNOWN16
	LDY $20
	MOVE_INT_YPTRSRC __BSS_START__, $06
	MOVE_INT $06, $0E
	LDX $22
	LDA UNKNOWN_7E5DA6
	JSR ADJUST_POSITION_HORIZONTAL
	MOVE_INT $06, $12
	LDY $1A
	MOVE_INT_YPTRSRC __BSS_START__, $06
	MOVE_INT $06, $0E
	LDX $22
	LDA UNKNOWN_7E5DA6
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	JSR ADJUST_POSITION_VERTICAL
	MOVE_INT $06, $16
	BRA @UNKNOWN16
@UNKNOWN14:
	LDA DEMO_FRAMES_LEFT
	BNE @UNKNOWN15
	LDY GAME_STATE+game_state::current_party_members
	LDX $18
	LDA $14
	JSR UNKNOWN_C05FD1
	AND #$003F
	STA $04
	BRA @UNKNOWN16
@UNKNOWN15:
	LDA #$0000
	STA $04
@UNKNOWN16:
	LDA $04
	STA GAME_STATE+game_state::trodden_tile_type
	LDA #$0001
	STA $02
	LDY GAME_STATE+game_state::current_party_members
	LDX $18
	LDA $14
	JSL NPC_COLLISION_CHECK
	LDA ENTITY_COLLIDED_OBJECTS+46
	CMP #ENTITY_COLLISION_NO_OBJECT
	BEQ @UNKNOWN17
	LDA #$0000
	STA $02
@UNKNOWN17:
	LDA $04
	AND #$00C0
	BEQ @UNKNOWN18
	LDA #$0000
	STA $02
@UNKNOWN18:
<<<<<<< HEAD
	LDA LADDER_STAIRS_TILE_X
	CMP #.LOWORD(-1)
=======
	LDA UNKNOWN_7E5DA8
	CMP #$FFFF
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	BEQ @UNKNOWN19
	LDX LADDER_STAIRS_TILE_Y
	LDA LADDER_STAIRS_TILE_X
	JSL UNKNOWN_C07526
	STA $02
	BRA @UNKNOWN21
@UNKNOWN19:
	LDX GAME_STATE+game_state::walking_style
	CPX #WALKING_STYLE::LADDER
	BEQ @UNKNOWN20
	CPX #WALKING_STYLE::ROPE
	BNE @UNKNOWN21
@UNKNOWN20:
	STZ GAME_STATE+game_state::walking_style
@UNKNOWN21:
	LDA $02
	BEQ @UNKNOWN22
	MOVE_INT $12, $06
	LDA $06
	STA GAME_STATE + game_state::unknown80
	LDA $08
	STA GAME_STATE+game_state::leader_x_coord
	MOVE_INT $16, $06
	LDA $06
	STA GAME_STATE + game_state::unknown84
	LDA $08
	STA GAME_STATE+game_state::leader_y_coord
	BRA @UNKNOWN23
@UNKNOWN22:
	STZ GAME_STATE + game_state::unknown90
@UNKNOWN23:
	LDA FRAME_COUNTER
	AND #$00FF
	AND #$0001
	BNE @UNKNOWN24
	LDA ACTIVE_HOTSPOTS
	BEQ @UNKNOWN24
	LDA #$0000
	JSL UNKNOWN_C073C0
@UNKNOWN24:
	LDA FRAME_COUNTER
	AND #$00FF
	AND #$0001
	BEQ @UNKNOWN25
	LDA ACTIVE_HOTSPOTS + .SIZEOF(active_hotspot)
	BEQ @UNKNOWN25
	LDA #$0001
	JSL UNKNOWN_C073C0
@UNKNOWN25:
	LDX GAME_STATE+game_state::walking_style
	CPX #WALKING_STYLE::LADDER
	BEQ @UNKNOWN26
	CPX #WALKING_STYLE::ROPE
	BNE @UNKNOWN27
@UNKNOWN26:
<<<<<<< HEAD
	LDA LADDER_STAIRS_TILE_X
	OPTIMIZED_MULT @VIRTUAL04, 8
=======
	LDA UNKNOWN_7E5DA8
	ASL
	ASL
	ASL
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	CLC
	ADC #$0008
	STA GAME_STATE+game_state::leader_x_coord
@UNKNOWN27:
	LDA DEBUG
	BEQ @RETURN
	LDA PAD_STATE
	AND #PAD::X_BUTTON
	BEQ @RETURN
	LDX #.LOWORD(GAME_STATE) + game_state::leader_x_coord
	LDA __BSS_START__,X
	AND #$FFF8
	STA __BSS_START__,X
	LDX #.LOWORD(GAME_STATE) + game_state::leader_y_coord
	LDA __BSS_START__,X
	AND #$FFF8
	STA __BSS_START__,X
@RETURN:
	PLD
	RTS
