
UNKNOWN_C2239D:
	BEGIN_C_FUNCTION_FAR
	STACK_RESERVE_VARS
	STACK_RESERVE_INT16
	STACK_RESERVE_PARAM_INT16 ;int
	STACK_RESERVE_RETURN_INT16 ;int
	END_STACK_VARS
.IF .DEFINED(JPN) ;the register allocation is almost entirely different here, but the logic appears to be identical...
	STA @VIRTUAL02
	LDA #0
	STA @LOCAL00
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA @LOCAL00
	CLC
	ADC #.LOWORD(GAME_STATE)
	TAX
	LDA a:game_state::party_members,X
	AND #$00FF
	CMP @VIRTUAL02
	BNE @UNKNOWN1
	LDA @VIRTUAL02
	BRA @UNKNOWN5
@UNKNOWN1:
	LDA @LOCAL00
	INC
	STA @LOCAL00
@UNKNOWN2:
	STA @VIRTUAL04
	LDA GAME_STATE+game_state::party_count
	AND #$00FF
	CLC
	SBC @VIRTUAL04
	BRANCHGTS @UNKNOWN0
	LDA #0
.ELSE
	STA @LOCAL00
	LDX #0
	BRA @UNKNOWN2
@UNKNOWN0:
	LDA @LOCAL00
	STA @VIRTUAL02
	LDA GAME_STATE + game_state::party_members,X
	AND #$00FF
	CMP @VIRTUAL02
	BNE @UNKNOWN1
	LDA @LOCAL00
	BRA @UNKNOWN5
@UNKNOWN1:
	INX
@UNKNOWN2:
	STX @VIRTUAL02
	LDA GAME_STATE+game_state::party_count
	AND #$00FF
	CLC
	SBC @VIRTUAL02
	BRANCHGTS @UNKNOWN0
	LDA #0
.ENDIF
@UNKNOWN5:
	END_C_FUNCTION
