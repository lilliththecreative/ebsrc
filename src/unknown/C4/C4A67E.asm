
UNKNOWN_C4A67E: ;$C4A67E
	@OPTIONS = $02
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 17
	STX @OPTIONS
	STA $04
	LDA @OPTIONS
	AND #$0002
	BEQ @UNKNOWN0
	SEP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	LDA #1
	STA SWIRL_INVERT_ENABLED
=======
	LDA #$0001
	STA UNKNOWN_7EAEC6
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	BRA @UNKNOWN1
@UNKNOWN0:
	SEP #PROC_FLAGS::ACCUM8
	STZ SWIRL_INVERT_ENABLED
@UNKNOWN1:
	REP #PROC_FLAGS::ACCUM8
	LDA @OPTIONS
	AND #$0001
	BEQ @UNKNOWN2
	SEP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	LDA #1
	STA SWIRL_REVERSED
=======
	LDA #$0001
	STA UNKNOWN_7EAEC7
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	BRA @UNKNOWN3
@UNKNOWN2:
	SEP #PROC_FLAGS::ACCUM8
	STZ SWIRL_REVERSED
@UNKNOWN3:
	REP #PROC_FLAGS::ACCUM8
	LDA @OPTIONS
	AND #$0004
	BEQ @UNKNOWN4
	SEP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	LDA #32
	STA SWIRL_MASK_SETTINGS
	BRA @UNKNOWN5
@UNKNOWN4:
	SEP #PROC_FLAGS::ACCUM8
	LDA #31
	STA SWIRL_MASK_SETTINGS
@UNKNOWN5:
	LDA #1
	STA FRAMES_UNTIL_NEXT_SWIRL_UPDATE
=======
	LDA #$0020
	STA UNKNOWN_7EAEC8
	BRA @UNKNOWN5
@UNKNOWN4:
	SEP #PROC_FLAGS::ACCUM8
	LDA #$001F
	STA UNKNOWN_7EAEC8
@UNKNOWN5:
	LDA #$0001
	STA UNKNOWN_7EAEC2
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	REP #PROC_FLAGS::ACCUM8
	LOADPTR SWIRL_PRIMARY_TABLE, $06
	LDA $04
	ASL
	ASL
	STA $0F
	MOVE_INTX $06, $0A
	CLC
	ADC $0A
	STA $0A
	SEP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	LDA [@VIRTUAL0A]
	STA FRAMES_UNTIL_NEXT_SWIRL_FRAME
	LDY #.LOWORD(SWIRL_FRAMES_LEFT)
=======
	LDA [$0A]
	STA UNKNOWN_7EAEC3
	LDY #.LOWORD(UNKNOWN_7EAEC4)
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	REP #PROC_FLAGS::ACCUM8
	LDA $0F
	INC
	INC
	MOVE_INTX $06, $0A
	CLC
	ADC $0A
	STA $0A
	SEP #PROC_FLAGS::ACCUM8
	LDA [$0A]
	STA __BSS_START__,Y
	LDX #.LOWORD(SWIRL_HDMA_TABLE_ID)
	REP #PROC_FLAGS::ACCUM8
	LDA $0F
	INC
	CLC
	ADC $06
	STA $06
	SEP #PROC_FLAGS::ACCUM8
	LDA [$06]
	STA $0E
	STA __BSS_START__,X
	REP #PROC_FLAGS::ACCUM8
	LDA SWIRL_REVERSED
	AND #$00FF
	BEQ @UNKNOWN6
	SEP #PROC_FLAGS::ACCUM8
	LDA __BSS_START__,Y
	STA $00
	LDA $0E
	CLC
	ADC $00
	STA __BSS_START__,X
@UNKNOWN6:
	LDY #.LOWORD(LOADED_OVAL_WINDOW)
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT_CONSTANT NULL, $06
	MOVE_INT_YPTRDEST $06, __BSS_START__
	LDA $04
	BNE @UNKNOWN7
	LOADPTR UNKNOWN_C4A5CE, $06
	MOVE_INT_YPTRDEST $06, __BSS_START__
@UNKNOWN7:
	SEP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	STZ SWIRL_HDMA_CHANNEL_OFFSET
	STZ SWIRL_LENGTH_PADDING
	LDA #1
	STA SWIRL_AUTO_RESTORE
=======
	STZ UNKNOWN_7EAEC9
	STZ UNKNOWN_7EAECA
	LDA #$0001
	STA UNKNOWN_7EAECB
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	REP #PROC_FLAGS::ACCUM8
	LDA @OPTIONS
	AND #$0080
	BEQ @UNKNOWN8
	LDA $04
	SEP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	STA SWIRL_NEXT_SWIRL
	LDA #4
	STA FRAMES_UNTIL_NEXT_SWIRL_FRAME
	STZ SWIRL_REPEAT_SPEED
	LDA #8
	STA SWIRL_REPEATS_UNTIL_SPEED_UP
=======
	STA UNKNOWN_7EAEE4
	LDA #$0004
	STA UNKNOWN_7EAEC3
	STZ UNKNOWN_7EAEE5
	LDA #$0008
	STA UNKNOWN_7EAEE6
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	BRA @UNKNOWN9
@UNKNOWN8:
	SEP #PROC_FLAGS::ACCUM8
	STZ SWIRL_NEXT_SWIRL
@UNKNOWN9:
	JSL UNKNOWN_C0B0AA
	PLD
	RTL
