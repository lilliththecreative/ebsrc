
;Loads graphics for the staff credits, but what else?
<<<<<<< HEAD
UNKNOWN_C4F07D:
	BEGIN_C_FUNCTION_FAR
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	END_STACK_VARS
	LOADPTR BUFFER, @VIRTUAL06
	JSL UNKNOWN_C08726
	JSL UNKNOWN_C021E6
	STZ CREDITS_CURRENT_ROW
	STZ CREDITS_DMA_QUEUE_START
	STZ CREDITS_DMA_QUEUE_END
	LDY #VRAM::CREDITS_LAYER_1_TILES
	LDX #VRAM::CREDITS_LAYER_1_TILEMAP
=======
UNKNOWN_C4F07D: ;$C4F07D
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 22
	LOADPTR UNKNOWN_7F0000, $06
	JSL UNKNOWN_C08726
	JSL UNKNOWN_C021E6
	STZ UNKNOWN_7EB4F7
	STZ UNKNOWN_7EB4F5
	STZ UNKNOWN_7EB4F3
	LDY #$0000
	LDX #$3800
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	LDA #BG_TILEMAP_SIZE::HORIZONTAL
	JSL SET_BG1_VRAM_LOCATION
	LDY #$2000
	LDX #$7000
	LDA #BG_TILEMAP_SIZE::BOTH
	JSL SET_BG2_VRAM_LOCATION
	LDY #$6000
	LDX #$6C00
	LDA #BG_TILEMAP_SIZE::NORMAL
	JSL SET_BG3_VRAM_LOCATION
	LDA #$0062
	JSL SET_OAM_SIZE
	STZ BG3_X_POS
	STZ BG3_Y_POS
	STZ BG2_Y_POS
	STZ BG2_X_POS
	STZ BG1_Y_POS
	STZ BG1_X_POS
	JSL UPDATE_SCREEN
	LDA #$0000
	STA [$06]
	COPY_TO_VRAM1P $06, $3800, $1000, $03
	.A16
	LDA #$240C
<<<<<<< HEAD
	STA [@VIRTUAL06]
	COPY_TO_VRAM1P @VIRTUAL06, VRAM::CREDITS_LAYER_2_TILEMAP, 4096, 9
	COPY_TO_VRAM1 BUFFER+1, VRAM::CREDITS_LAYER_2_TILEMAP, 4096, 15
	LOADPTR UNKNOWN_E1E94A, @LOCAL00
	MOVE_INT @VIRTUAL06, @LOCAL01
	JSL DECOMP
	LDA #.LOWORD(PALETTES) + BPP4PALETTE_SIZE * 1
	STA @VIRTUAL02
	LOADPTR UNKNOWN_E1E924+6, @LOCAL00
	LDX #BPP4PALETTE_SIZE * 1
	LDA @VIRTUAL02
	JSL MEMCPY16
	COPY_TO_VRAM1P @VIRTUAL06, VRAM::CREDITS_LAYER_2_TILEMAP, 1792, 0
	COPY_TO_VRAM1 BUFFER + $700, VRAM::CREDITS_LAYER_2_TILES, 8192, 0
	LDA #0
	STA [@VIRTUAL06]
	COPY_TO_VRAM1P @VIRTUAL06, VRAM::CREDITS_LAYER_3_TILEMAP, 2048, 3
	LOADPTR STAFF_CREDITS_FONT_GRAPHICS, @LOCAL00
	MOVE_INT @VIRTUAL06, @LOCAL01
	JSL DECOMP
	COPY_TO_VRAM1P @VIRTUAL06, VRAM::CREDITS_LAYER_3_TILES + $200, STAFF_CREDITS_FONT_GFX_SIZE, 0
	LOADPTR STAFF_CREDITS_FONT_PALETTE, @LOCAL00
	LDX #BPP2PALETTE_SIZE * 2
	LDA #.LOWORD(PALETTES)
	JSL MEMCPY16
	LOADPTR SPRITE_GROUP_PALETTES, @LOCAL00
	LDX #BPP4PALETTE_SIZE * 8
	LDA #.LOWORD(PALETTES) + BPP4PALETTE_SIZE * 8
=======
	STA [$06]
	COPY_TO_VRAM1P $06, $7000, $1000, $09
	.A16
	COPY_TO_VRAM1 UNKNOWN_7F0000+1, $7000, $1000, $0F
	.A16
	LOADPTR UNKNOWN_E1E94A, $0E
	MOVE_INT $06, $12
	JSL DECOMP
	LDA #$0220
	STA $02
	LOADPTR UNKNOWN_E1E924+6, $0E
	LDX #$0020
	LDA $02
	JSL MEMCPY16
	COPY_TO_VRAM1P $06, $7000, $700, $00
	.A16
	COPY_TO_VRAM1 UNKNOWN_7F0700, $2000, $2000, $00
	.A16
	LDA #$0000
	STA [$06]
	COPY_TO_VRAM1P $06, $6C00, $800, $03
	.A16
	LOADPTR STAFF_CREDITS_FONT_GRAPHICS, $0E
	MOVE_INT $06, $12
	JSL DECOMP
	COPY_TO_VRAM1P $06, $6200, STAFF_CREDITS_FONT_GFX_SIZE, $00
	.A16
	LOADPTR STAFF_CREDITS_FONT_PALETTE, $0E
	LDX #$0010
	LDA #$0200
	JSL MEMCPY16
	LOADPTR SPRITE_GROUP_PALETTES, $0E
	LDX #$0100
	LDA #$0300
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	STZ_BADOPT $0E
	LDX #$01E0
	REP #PROC_FLAGS::ACCUM8
	LDA $02
	JSL MEMSET16
	SEP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	LDA #PALETTE_UPLOAD::FULL
	STA PALETTE_UPLOAD_MODE
	LDA #$17
	STA TM_MIRROR
	REP #PROC_FLAGS::ACCUM8
	STZ CREDITS_NEXT_CREDIT_POSITION
	MOVE_INT_CONSTANT NULL, CREDITS_SCROLL_POSITION
	LDA #7
	STA CREDITS_ROW_WIPE_THRESHOLD
	PROMOTENEARPTR BG2_BUFFER, @VIRTUAL06
	LDX #0
=======
	LDA #$0018
	STA UNKNOWN_7E0030
	LDA #$0017
	STA TM_MIRROR
	REP #PROC_FLAGS::ACCUM8
	STZ UNKNOWN_7EB4E3
	MOVE_INT_CONSTANT NULL, UNKNOWN_7EB4EB
	LDA #$0007
	STA UNKNOWN_7EB4E5
	PROMOTENEARPTR BG2_BUFFER, $06
	LDX #$0000
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	BRA @UNKNOWN1
@UNKNOWN0:
	REP #PROC_FLAGS::ACCUM8
	LDA #$0000
	STA [$06]
	INC $06
	INC $06
	INX
@UNKNOWN1:
	CPX #$0200
	BCC @UNKNOWN0
	REP #PROC_FLAGS::ACCUM8
	MOVE_INT_CONSTANT STAFF_TEXT, CREDITS_SCRIPT_DATA
	JSL UNKNOWN_C08744
	PLD
	RTL
