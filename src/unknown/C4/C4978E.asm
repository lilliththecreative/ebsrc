
<<<<<<< HEAD
UNKNOWN_C4978E:
	BEGIN_C_FUNCTION_FAR
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	END_STACK_VARS
	LDA #.LOWORD(PALETTES) ;why is preparing the destination pointer for this memcpy so needlessly expensive?
	STORE_INT1632 @VIRTUAL06
	CLC
	VAR_ADD_CONST_INT_ASSIGN PALETTES & $FF0000, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	LDX #BPP4PALETTE_SIZE * 16
	LDA #.LOWORD(MAP_PALETTE_BACKUP)
=======
UNKNOWN_C4978E: ;$C4978E
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 18
	LDA #$0200
	STORE_INT1632 $06
	CLC
	VAR_ADD_CONST_INT_ASSIGN $7E0000, $06
	MOVE_INT $06, $0E
	LDX #$0200
	LDA #.LOWORD(UNKNOWN_7E4476)
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	JSL MEMCPY16
	PLD
	RTL
