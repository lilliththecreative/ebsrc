
CC_1D_07:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
	STACK_RESERVE_PARAM_INT16
	STACK_RESERVE_PARAM_INT16
	STACK_RESERVE_RETURN_INT16
	END_STACK_VARS
	TXA
	STA @LOCAL01
	LDA #3
	CLC
	SBC CC_ARGUMENT_GATHERING_LOOP_COUNTER
	BRANCHLTEQS @UNKNOWN2
	LDA @LOCAL01
	SEP #PROC_FLAGS::ACCUM8
	LDX CC_ARGUMENT_GATHERING_LOOP_COUNTER
	STA CC_ARGUMENT_STORAGE,X
	REP #PROC_FLAGS::ACCUM8
	INC CC_ARGUMENT_GATHERING_LOOP_COUNTER
	LDA #.LOWORD(CC_1D_07)
	JMP @UNKNOWN5
@UNKNOWN2:
	SEP #PROC_FLAGS::INDEX8
	LDY #24
	MOVE_INT1632 @LOCAL01, @VIRTUAL06
	JSL ASL32_ENTRY2
	PUSH32 @VIRTUAL06
	LDY #16
	SEP #PROC_FLAGS::ACCUM8
	MOVE_INT832 CC_ARGUMENT_STORAGE+2, @VIRTUAL06
	REP #PROC_FLAGS::ACCUM8
	JSL ASL32_ENTRY2
	PUSH32 @VIRTUAL06
	LDY #8
	SEP #PROC_FLAGS::ACCUM8
	MOVE_INT832 CC_ARGUMENT_STORAGE+1, @VIRTUAL06
	REP #PROC_FLAGS::ACCUM8
	JSL ASL32_ENTRY2
	MOVE_INT @VIRTUAL06, @VIRTUAL0A
	SEP #PROC_FLAGS::ACCUM8
	MOVE_INT832 CC_ARGUMENT_STORAGE, @VIRTUAL06
	REP #PROC_FLAGS::ACCUM8
	OR_INT_ASSIGN @VIRTUAL06, @VIRTUAL0A
	PULL32 @VIRTUAL0A
	OR_INT_ASSIGN @VIRTUAL06, @VIRTUAL0A
	PULL32 @VIRTUAL0A
	OR_INT_ASSIGN @VIRTUAL06, @VIRTUAL0A
	MOVE_INT_CONSTANT NULL, @VIRTUAL0A
	CMP32 @VIRTUAL06, @VIRTUAL0A
	BNE @ARG_IS_NONZERO
	JSR GET_ARGUMENT_MEMORY
@ARG_IS_NONZERO:
	MOVE_INT @VIRTUAL06, @LOCAL00
	JSL WITHDRAW_FROM_ATM
	MOVE_INT @VIRTUAL06, @LOCAL00
	JSR SET_WORKING_MEMORY
	LDA #NULL
@UNKNOWN5:
	END_C_FUNCTION
