
CC_1B_TREE:
	BEGIN_C_FUNCTION
	STACK_RESERVE_VARS
	STACK_RESERVE_INT32
	STACK_RESERVE_INT32
	STACK_RESERVE_INT16
	STACK_RESERVE_PARAM_INT16
	STACK_RESERVE_PARAM_INT16
	STACK_RESERVE_RETURN_INT16
	END_STACK_VARS
	TAY
	STY @LOCAL02
	TXA
	BEQ @UNKNOWN3
	CMP #$01
	BEQ @UNKNOWN4
	CMP #$02
	BEQ @UNKNOWN5
	CMP #$03
	BEQ @UNKNOWN8
	CMP #$04
	BEQL @UNKNOWN11
	CMP #$05
	BEQL @UNKNOWN12
	CMP #$06
	BEQL @UNKNOWN13
	JMP @UNKNOWN14
@UNKNOWN3:
	JSR TRANSFER_ACTIVE_MEM_STORAGE
	JMP @UNKNOWN14
@UNKNOWN4:
	JSR TRANSFER_STORAGE_MEM_ACTIVE
	JMP @UNKNOWN14
@UNKNOWN5:
	JSR GET_WORKING_MEMORY
	MOVE_INT_CONSTANT NULL, @VIRTUAL0A
	CMP32 @VIRTUAL06, @VIRTUAL0A
	BNE @UNKNOWN7
	LDA #.LOWORD(CC_0A)
	JMP @UNKNOWN15
@UNKNOWN7:
	LDY @LOCAL02
	MOVE_INT_YPTRSRC __BSS_START__, @VIRTUAL06
	LDA #4
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA __BSS_START__,Y
	LDA @VIRTUAL06+2
	STA __BSS_START__+2,Y
	JMP @UNKNOWN14
@UNKNOWN8:
	JSR GET_WORKING_MEMORY
	MOVE_INT_CONSTANT NULL, @VIRTUAL0A
	CMP32 @VIRTUAL06, @VIRTUAL0A
	BEQ @UNKNOWN10
	LDA #.LOWORD(CC_0A)
	JMP @UNKNOWN15
@UNKNOWN10:
	LDY @LOCAL02
	MOVE_INT_YPTRSRC __BSS_START__, @VIRTUAL06
	LDA #4
	CLC
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA __BSS_START__,Y
	LDA @VIRTUAL06+2
	STA __BSS_START__+2,Y
	JMP @UNKNOWN14
@UNKNOWN11:
	JSR GET_WORKING_MEMORY
	MOVE_INT @VIRTUAL06, @LOCAL01
	JSR GET_ARGUMENT_MEMORY
	MOVE_INT @VIRTUAL06, @VIRTUAL0A
.IF .DEFINED(JPN)
	MOVE_INT @VIRTUAL0A, @LOCAL00
.ELSE
	MOVE_INT @VIRTUAL0A, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
.ENDIF
	JSR SET_WORKING_MEMORY
	MOVE_INT @LOCAL01, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	JSR SET_ARGUMENT_MEMORY
	BRA @UNKNOWN14
@UNKNOWN12:
	JSR GET_WORKING_MEMORY
	MOVE_INT @VIRTUAL06, TEXT_MAIN_REGISTER_BACKUP
	JSR GET_ARGUMENT_MEMORY
	MOVE_INT @VIRTUAL06, TEXT_SUB_REGISTER_BACKUP
	JSR GET_SECONDARY_MEMORY
	SEP #PROC_FLAGS::ACCUM8
	STA TEXT_LOOP_REGISTER_BACKUP
	BRA @UNKNOWN14
@UNKNOWN13:
	.A16
	MOVE_INT TEXT_MAIN_REGISTER_BACKUP, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	JSR SET_WORKING_MEMORY
	MOVE_INT TEXT_SUB_REGISTER_BACKUP, @VIRTUAL06
	MOVE_INT @VIRTUAL06, @LOCAL00
	JSR SET_ARGUMENT_MEMORY
	LDA TEXT_LOOP_REGISTER_BACKUP
	AND #$00FF
	JSR SET_SECONDARY_MEMORY
@UNKNOWN14:
	REP #PROC_FLAGS::ACCUM8
	LDA #NULL
@UNKNOWN15:
	END_C_FUNCTION
