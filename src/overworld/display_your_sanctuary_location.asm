
DISPLAY_YOUR_SANCTUARY_LOCATION: ;$C4E2D7
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE 18
	AND #$0007
	STA $02
	ASL
	TAX
	LDA LOADED_YOUR_SANCTUARY_LOCATIONS,X
	BNE @UNKNOWN0
	LDA $02
	JSL LOAD_YOUR_SANCTUARY_LOCATION
	JSL WAIT_UNTIL_NEXT_FRAME
@UNKNOWN0:
.IF .DEFINED(USA)
	JSL WAIT_DMA_FINISHED
.ENDIF
<<<<<<< HEAD
	LOADPTR BUFFER, @VIRTUAL06
=======
	LOADPTR UNKNOWN_7F0000, $06
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	LDY #$0800
	LDA $02
	JSL MULT16
	CLC
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDY #$3800
	LDX #$0780
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0000
	JSL PREPARE_VRAM_COPY
	.A16
<<<<<<< HEAD
	LOADPTR BUFFER + $4000, @VIRTUAL06
=======
	LOADPTR UNKNOWN_7F4000, $06
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	LDY #$0200
	LDA $02
	JSL MULT16
	CLC
<<<<<<< HEAD
	ADC @VIRTUAL06
	STA @VIRTUAL06
	STA @LOCAL00
	LDA @VIRTUAL06+2
	STA @LOCAL00+2
	LDX #BPP4PALETTE_SIZE * 8
	LDA #.LOWORD(PALETTES)
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	LDA #PALETTE_UPLOAD::BG_ONLY
	STA PALETTE_UPLOAD_MODE
=======
	ADC $06
	STA $06
	STA $0E
	LDA $08
	STA $10
	LDX #$0100
	LDA #$0200
	JSL MEMCPY16
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0008
	STA UNKNOWN_7E0030
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	REP #PROC_FLAGS::ACCUM8
	STZ SCREEN_TOP_Y
	STZ SCREEN_LEFT_X
	STZ BG1_Y_POS
	STZ BG1_X_POS
	PLD
	RTL
