
; Places player in world after loading a game
SPAWN: ;$C4C718
	REP #PROC_FLAGS::ACCUM8 | PROC_FLAGS::INDEX8 | PROC_FLAGS::CARRY
	RESERVE_STACK_SPACE_CLOBBER 24
	LDA RESPAWN_X
	STA $02
	LDX RESPAWN_Y
	STX $16
	JSL UNKNOWN_C0943C
	JSR UNKNOWN_C4C2DE
	JSR UNKNOWN_C4C64D
	STA $04
	CMP #$0000
	BEQ @UNKNOWN0
	LDY #$0000
	LDX #$0001
	LDA #$0002
	JSL FADE_OUT_WITH_MOSAIC
	JSL UNKNOWN_C09451
	JMP @UNKNOWN9
@UNKNOWN0:
	LDA #$0020
	JSL UNKNOWN_C4C58F
	LDA #$0002
	JSL UNKNOWN_C0AC0C
	SEP #PROC_FLAGS::ACCUM8
	LDA #$0017
	STA TM_MIRROR
	REP #PROC_FLAGS::ACCUM8
<<<<<<< HEAD
	LDA #.LOWORD(-1)
	STA LOADED_MAP_TILE_COMBO
	STA CURRENT_MAP_MUSIC_TRACK
	STA CURRENT_MUSIC_TRACK
	LDA #1
	STA WIPE_PALETTES_ON_MAP_LOAD
=======
	LDA #$FFFF
	STA UNKNOWN_7E436E
	STA UNKNOWN_7E5DD4
	STA CURRENT_MUSIC_TRACK
	LDA #$0001
	STA UNKNOWN_7E4676
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	.IF .DEFINED(USA) && (!.DEFINED(PROTOTYPE19950327))
		JSL WAIT_UNTIL_NEXT_FRAME
	.ENDIF
	LDY #$0006
	LDX $16
	LDA $02
	JSL INITIALIZE_MAP
	LDA GAME_STATE + game_state::party_members
	AND #$00FF
	DEC
	LDY #.SIZEOF(char_struct)
	JSL MULT168
	CLC
<<<<<<< HEAD
	ADC #.LOWORD(PARTY_CHARACTERS)
	STA CURRENT_PARTY_MEMBER_TICK
	LDA #0
	STA @LOCAL02
=======
	ADC #.LOWORD(CHAR_STRUCT)
	STA UNKNOWN_7E4DC6
	LDA #$0000
	STA $14
>>>>>>> parent of e89e3811 (switch to new stack macro, delete old one and replace some magic numbers)
	BRA @UNKNOWN2
@UNKNOWN1:
	CLC
	ADC CURRENT_PARTY_MEMBER_TICK
	TAX
	SEP #PROC_FLAGS::ACCUM8
	STZ a:char_struct::afflictions,X
	REP #PROC_FLAGS::ACCUM8
	LDA $14
	INC
	STA $14
@UNKNOWN2:
	CMP #$0006
	BCC @UNKNOWN1
	LDX CURRENT_PARTY_MEMBER_TICK
	LDA a:char_struct::max_hp,X
	LDX CURRENT_PARTY_MEMBER_TICK
	STA a:char_struct::current_hp_target,X
	LDX CURRENT_PARTY_MEMBER_TICK
	STA a:char_struct::current_hp,X
	LDX CURRENT_PARTY_MEMBER_TICK
	STZ a:char_struct::current_pp_target,X
	LDX CURRENT_PARTY_MEMBER_TICK
	STZ a:char_struct::current_pp,X
	LDY #.LOWORD(GAME_STATE) + game_state::money_carried
	STY $12
	MOVE_INT_YPTRSRC __BSS_START__, $06
	MOVE_INT $06, $0E
	MOVE_INT $06, $0A
	MOVE_INT_CONSTANT 1, $06
	AND_INT_ASSIGN $0A, $06
	PHA
	LDA $0A
	PHA
	MOVE_INT_CONSTANT 2, $0A
	MOVE_INT $0E, $06
	JSL DIVISION32
	PULL32 $0A
	CLC
	ADD_INT_ASSIGN $06, $0A
	LDY $12
	MOVE_INT_YPTRDEST $06, __BSS_START__
	.IF .DEFINED(USA) && (!.DEFINED(PROTOTYPE19950327))
		JSL UNKNOWN_C07B52
	.ENDIF
	LDY #$0001
	STY $16
	BRA @UNKNOWN4
@UNKNOWN3:
	LDX #$0000
	TYA
	JSL SET_EVENT_FLAG
	LDY $16
	INY
	STY $16
@UNKNOWN4:
	TYA
	CLC
	SBC #$000A
	BRANCHLTEQS @UNKNOWN3
	LDA #$0000
	STA $14
	BRA @UNKNOWN8
@UNKNOWN7:
	ASL
	TAX
	LDA #ENTITY_COLLISION_NO_OBJECT
	STA ENTITY_COLLIDED_OBJECTS,X
	LDA $14
	INC
	STA $14
@UNKNOWN8:
	CMP #$001E
	BCC @UNKNOWN7
	JSL UNKNOWN_C064D4
	STZ DAD_PHONE_QUEUED
	STZ PLAYER_INTANGIBILITY_FRAMES
	JSL SPAWN_BUZZ_BUZZ
	JSL OAM_CLEAR
	JSL UNKNOWN_C09451
	LDA #$0020
	JSL UNKNOWN_C4C60E
@UNKNOWN9:
	LDA $04
	PLD
	RTL
